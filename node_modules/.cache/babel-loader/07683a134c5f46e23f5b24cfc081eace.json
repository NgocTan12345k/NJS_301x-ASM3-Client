{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/tan/Desktop/FUNiX/Mo\\u0302n 5/Assignment/ASM3/ASM3 Front-end/src/Authentication/SignIn.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, Redirect } from \"react-router-dom\"; // import UserAPI from '../API/UserAPI';\n\nimport { addSession } from \"../Redux/Action/ActionSession\";\nimport \"./Auth.css\";\nimport queryString from \"query-string\";\nimport CartAPI from \"../API/CartAPI\";\nimport axios from \"axios\";\nimport MessengerAPI from \"../API/MessengerAPI\";\nimport { useCookies } from \"react-cookie\";\n\nfunction SignIn(props) {\n  _s();\n\n  //listCart được lấy từ redux\n  const listCart = useSelector(state => state.Cart.listCart);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [user, setUser] = useState([]);\n  const [errorEmail, setErrorEmail] = useState(false);\n  const [emailRegex, setEmailRegex] = useState(false);\n  const [errorPassword, setErrorPassword] = useState(false);\n  const [redirect, setRedirect] = useState(false);\n  const [checkPush, setCheckPush] = useState(false);\n  const dispatch = useDispatch();\n  const [cookies, setCookie] = useCookies([\"user\"]);\n\n  const onChangeEmail = e => {\n    setEmail(e.target.value);\n  };\n\n  const onChangePassword = e => {\n    setPassword(e.target.value);\n  };\n\n  const onSubmit = () => {\n    if (!email) {\n      setErrorEmail(true);\n      return;\n    } else {\n      if (!password) {\n        setErrorEmail(false);\n        setErrorPassword(true);\n        return;\n      } else {\n        setErrorPassword(false);\n\n        if (!validateEmail(email)) {\n          setEmailRegex(true);\n          return;\n        } else {\n          setEmailRegex(false);\n\n          const Signin = () => {\n            // console.log(\"email-->\", email);\n            fetch(\"http://localhost:3500/api/auth/login\", {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              credentials: \"same-origin\",\n              body: JSON.stringify({\n                email: email,\n                password: password\n              })\n            }).then(res => {\n              console.log(\"res-->\", res.clone().json());\n              return res.clone().json();\n            }).then(data => {\n              console.log(\"data-->\", data);\n\n              if (data.message === \"Login successful\") {\n                const roomId = Math.random().toString();\n                localStorage.setItem(\"roomId\", roomId);\n                localStorage.removeItem(\"id_temp\");\n                localStorage.setItem(\"id_user\", data.user.userId);\n                localStorage.setItem(\"name_user\", data.user.userName);\n                localStorage.setItem(\"role\", data.user.role);\n                setCookie(\"user\", data, {\n                  path: \"/\"\n                });\n                const action = addSession(localStorage.getItem(\"id_user\"));\n                dispatch(action);\n                setCheckPush(true); // Hàm này dùng để tạo các conversation cho user và admin\n\n                const postConversation = async () => {\n                  console.log(\"email-->\", email);\n                  const params = {\n                    email: email,\n                    roomId: roomId //   password: password,\n\n                  };\n                  const query = \"?\" + queryString.stringify(params);\n                  const response = await MessengerAPI.postConversation(query);\n                  console.log(\"response-->\", response);\n                };\n\n                postConversation();\n              } else if (data.message === \"Wrong email\") {\n                setErrorEmail(true);\n                return;\n              } else if (data.message === \"Wrong password\") {\n                setErrorEmail(false);\n                setErrorPassword(true);\n                return;\n              }\n            }).catch(e => {\n              console.log(e);\n            });\n          };\n\n          Signin();\n        }\n      }\n    }\n  }; //Hàm này dùng để đưa hết tất cả carts vào API của user\n\n\n  useEffect(() => {\n    const fetchData = async () => {\n      //Lần đầu sẽ không thực hiện insert được vì addCart = ''\n      if (checkPush === true) {\n        for (let i = 0; i < listCart.length; i++) {\n          //Nó sẽ lấy idUser và idProduct và count cần thêm để gửi lên server\n          const params = {\n            idUser: localStorage.getItem(\"id_user\"),\n            idProduct: listCart[i].idProduct,\n            count: listCart[i].count\n          };\n          const query = \"?\" + queryString.stringify(params);\n          const response = await CartAPI.postAddToCart(query);\n          console.log(response);\n        }\n\n        setRedirect(true);\n      }\n    }; // const getSessionLogin = async () => {\n    //   const res = await axios.get(\"http://localhost:3500/api/auth/login\");\n    //   console.log(\"res-->\", res);\n    // };\n    // getSessionLogin();\n\n\n    axios.get(\"http://localhost:3500/api/auth/login\").then(resuilt => {\n      console.log(\"resuilt-->\", resuilt);\n    }).catch(err => {\n      console.log(err);\n    });\n    fetchData();\n  }, [checkPush, listCart]);\n\n  function validateEmail(email) {\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"limiter\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-login100\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrap-login100 p-l-55 p-r-55 p-t-65 p-b-50\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"login100-form-title p-b-33\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-center pb-5\",\n          children: [emailRegex && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-danger\",\n            children: \"* Incorrect Email Format\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 15\n          }, this), errorEmail && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-danger\",\n            children: \"* Please Check Your Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 15\n          }, this), errorPassword && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-danger\",\n            children: \"* Please Check Your Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wrap-input100 validate-input\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input100\",\n            type: \"text\",\n            placeholder: \"Email\",\n            value: email,\n            onChange: onChangeEmail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wrap-input100 rs1 validate-input\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input100\",\n            type: \"password\",\n            placeholder: \"Password\",\n            value: password,\n            onChange: onChangePassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container-login100-form-btn m-t-20\",\n          children: [redirect && /*#__PURE__*/_jsxDEV(Redirect, {\n            to: `/`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 26\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"login100-form-btn\",\n            onClick: onSubmit,\n            children: \"Sign in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center p-t-45 p-b-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"txt1\",\n            children: \"Create an account?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/signup\",\n            className: \"txt2 hov1\",\n            children: \"Sign up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SignIn, \"mXRSpsfcm2nWzmgzlD2f5OuFjRc=\", false, function () {\n  return [useSelector, useDispatch, useCookies];\n});\n\n_c = SignIn;\nexport default SignIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["/Users/tan/Desktop/FUNiX/Môn 5/Assignment/ASM3/ASM3 Front-end/src/Authentication/SignIn.jsx"],"names":["React","useEffect","useState","useDispatch","useSelector","Link","Redirect","addSession","queryString","CartAPI","axios","MessengerAPI","useCookies","SignIn","props","listCart","state","Cart","email","setEmail","password","setPassword","user","setUser","errorEmail","setErrorEmail","emailRegex","setEmailRegex","errorPassword","setErrorPassword","redirect","setRedirect","checkPush","setCheckPush","dispatch","cookies","setCookie","onChangeEmail","e","target","value","onChangePassword","onSubmit","validateEmail","Signin","fetch","method","headers","credentials","body","JSON","stringify","then","res","console","log","clone","json","data","message","roomId","Math","random","toString","localStorage","setItem","removeItem","userId","userName","role","path","action","getItem","postConversation","params","query","response","catch","fetchData","i","length","idUser","idProduct","count","postAddToCart","get","resuilt","err","re","test","String","toLowerCase"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, Redirect } from \"react-router-dom\";\n// import UserAPI from '../API/UserAPI';\nimport { addSession } from \"../Redux/Action/ActionSession\";\nimport \"./Auth.css\";\nimport queryString from \"query-string\";\nimport CartAPI from \"../API/CartAPI\";\nimport axios from \"axios\";\nimport MessengerAPI from \"../API/MessengerAPI\";\nimport { useCookies } from \"react-cookie\";\n\nfunction SignIn(props) {\n  //listCart được lấy từ redux\n  const listCart = useSelector((state) => state.Cart.listCart);\n\n  const [email, setEmail] = useState(\"\");\n\n  const [password, setPassword] = useState(\"\");\n\n  const [user, setUser] = useState([]);\n\n  const [errorEmail, setErrorEmail] = useState(false);\n  const [emailRegex, setEmailRegex] = useState(false);\n  const [errorPassword, setErrorPassword] = useState(false);\n\n  const [redirect, setRedirect] = useState(false);\n\n  const [checkPush, setCheckPush] = useState(false);\n\n  const dispatch = useDispatch();\n  const [cookies, setCookie] = useCookies([\"user\"]);\n\n  const onChangeEmail = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const onChangePassword = (e) => {\n    setPassword(e.target.value);\n  };\n\n  const onSubmit = () => {\n    if (!email) {\n      setErrorEmail(true);\n      return;\n    } else {\n      if (!password) {\n        setErrorEmail(false);\n        setErrorPassword(true);\n        return;\n      } else {\n        setErrorPassword(false);\n\n        if (!validateEmail(email)) {\n          setEmailRegex(true);\n          return;\n        } else {\n          setEmailRegex(false);\n          const Signin = () => {\n            // console.log(\"email-->\", email);\n            fetch(\"http://localhost:3500/api/auth/login\", {\n              method: \"POST\",\n              headers: { \"Content-Type\": \"application/json\" },\n              credentials: \"same-origin\",\n              body: JSON.stringify({\n                email: email,\n                password: password,\n              }),\n            })\n              .then((res) => {\n                console.log(\"res-->\", res.clone().json());\n                return res.clone().json();\n              })\n              .then((data) => {\n                console.log(\"data-->\", data);\n                if (data.message === \"Login successful\") {\n                  const roomId = Math.random().toString();\n                  localStorage.setItem(\"roomId\", roomId);\n                  localStorage.removeItem(\"id_temp\");\n                  localStorage.setItem(\"id_user\", data.user.userId);\n                  localStorage.setItem(\"name_user\", data.user.userName);\n                  localStorage.setItem(\"role\", data.user.role);\n                  setCookie(\"user\", data, { path: \"/\" });\n                  const action = addSession(localStorage.getItem(\"id_user\"));\n                  dispatch(action);\n                  setCheckPush(true);\n\n                  // Hàm này dùng để tạo các conversation cho user và admin\n                  const postConversation = async () => {\n                    console.log(\"email-->\", email);\n                    const params = {\n                      email: email,\n                      roomId: roomId,\n                      //   password: password,\n                    };\n\n                    const query = \"?\" + queryString.stringify(params);\n\n                    const response = await MessengerAPI.postConversation(query);\n                    console.log(\"response-->\", response);\n                  };\n\n                  postConversation();\n                } else if (data.message === \"Wrong email\") {\n                  setErrorEmail(true);\n                  return;\n                } else if (data.message === \"Wrong password\") {\n                  setErrorEmail(false);\n                  setErrorPassword(true);\n                  return;\n                }\n              })\n              .catch((e) => {\n                console.log(e);\n              });\n          };\n          Signin();\n        }\n      }\n    }\n  };\n\n  //Hàm này dùng để đưa hết tất cả carts vào API của user\n  useEffect(() => {\n    const fetchData = async () => {\n      //Lần đầu sẽ không thực hiện insert được vì addCart = ''\n      if (checkPush === true) {\n        for (let i = 0; i < listCart.length; i++) {\n          //Nó sẽ lấy idUser và idProduct và count cần thêm để gửi lên server\n          const params = {\n            idUser: localStorage.getItem(\"id_user\"),\n            idProduct: listCart[i].idProduct,\n            count: listCart[i].count,\n          };\n\n          const query = \"?\" + queryString.stringify(params);\n\n          const response = await CartAPI.postAddToCart(query);\n          console.log(response);\n        }\n\n        setRedirect(true);\n      }\n    };\n\n    // const getSessionLogin = async () => {\n    //   const res = await axios.get(\"http://localhost:3500/api/auth/login\");\n    //   console.log(\"res-->\", res);\n    // };\n    // getSessionLogin();\n    axios\n      .get(\"http://localhost:3500/api/auth/login\")\n      .then((resuilt) => {\n        console.log(\"resuilt-->\", resuilt);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    fetchData();\n  }, [checkPush, listCart]);\n\n  function validateEmail(email) {\n    const re =\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  }\n\n  return (\n    <div className=\"limiter\">\n      <div className=\"container-login100\">\n        <div className=\"wrap-login100 p-l-55 p-r-55 p-t-65 p-b-50\">\n          <span className=\"login100-form-title p-b-33\">Sign In</span>\n\n          <div className=\"d-flex justify-content-center pb-5\">\n            {emailRegex && (\n              <span className=\"text-danger\">* Incorrect Email Format</span>\n            )}\n            {errorEmail && (\n              <span className=\"text-danger\">* Please Check Your Email</span>\n            )}\n            {errorPassword && (\n              <span className=\"text-danger\">* Please Check Your Password</span>\n            )}\n          </div>\n\n          <div className=\"wrap-input100 validate-input\">\n            <input\n              className=\"input100\"\n              type=\"text\"\n              placeholder=\"Email\"\n              value={email}\n              onChange={onChangeEmail}\n            />\n          </div>\n\n          <div className=\"wrap-input100 rs1 validate-input\">\n            <input\n              className=\"input100\"\n              type=\"password\"\n              placeholder=\"Password\"\n              value={password}\n              onChange={onChangePassword}\n            />\n          </div>\n\n          <div className=\"container-login100-form-btn m-t-20\">\n            {redirect && <Redirect to={`/`} />}\n            <button className=\"login100-form-btn\" onClick={onSubmit}>\n              Sign in\n            </button>\n          </div>\n\n          <div className=\"text-center p-t-45 p-b-4\">\n            <span className=\"txt1\">Create an account?</span>\n            &nbsp;\n            <Link to=\"/signup\" className=\"txt2 hov1\">\n              Sign up\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default SignIn;\n"]},"metadata":{},"sourceType":"module"}
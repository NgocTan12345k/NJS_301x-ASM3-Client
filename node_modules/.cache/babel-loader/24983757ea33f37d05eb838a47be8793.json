{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/tan/Desktop/FUNiX/Mo\\u0302n 5/Assignment/ASM3/ASM3 Front-end/src/Authentication/SignIn.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, Redirect } from \"react-router-dom\"; // import UserAPI from '../API/UserAPI';\n\nimport { addSession } from \"../Redux/Action/ActionSession\";\nimport \"./Auth.css\";\nimport queryString from \"query-string\";\nimport CartAPI from \"../API/CartAPI\";\nimport axios from \"axios\";\nimport MessengerAPI from \"../API/MessengerAPI\";\n\nfunction SignIn(props) {\n  _s();\n\n  //listCart được lấy từ redux\n  const listCart = useSelector(state => state.Cart.listCart);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [user, setUser] = useState([]);\n  const [errorEmail, setErrorEmail] = useState(false);\n  const [emailRegex, setEmailRegex] = useState(false);\n  const [errorPassword, setErrorPassword] = useState(false);\n  const [redirect, setRedirect] = useState(false);\n  const [checkPush, setCheckPush] = useState(false);\n  const dispatch = useDispatch(); // useEffect(() => {\n  //   axios\n  //     .get(\"http://localhost:3500/api/auth/login\")\n  //     .then((resuilt) => {\n  //       if (resuilt) {\n  //         console.log(\"resuilt-->\", resuilt);\n  //       }\n  //     })\n  //     .catch((err) => {\n  //       console.log(err);\n  //     });\n  // }, []);\n  // axios.defaults.withCredentials = true;\n\n  const onChangeEmail = e => {\n    setEmail(e.target.value);\n  };\n\n  const onChangePassword = e => {\n    setPassword(e.target.value);\n  };\n\n  const onSubmit = () => {\n    // const Signin = () => {\n    //   fetch(\"http://localhost:3500/api/auth/login\", {\n    //     method: \"POST\",\n    //     headers: { \"Content-Type\": \"application/json\" },\n    //     credentials: \"same-origin\",\n    //     body: JSON.stringify({\n    //       email: email,\n    //       password: password,\n    //     }),\n    //   })\n    //     .then((res) => {\n    //       return res.json();\n    //     })\n    //     .then((data) => {\n    //       console.log(\"data-->\", data);\n    //     })\n    //     .catch((e) => {\n    //       console.log(e);\n    //     });\n    // };\n    // Signin();\n    if (!email) {\n      setErrorEmail(true);\n      return;\n    } else {\n      if (!password) {\n        setErrorEmail(false);\n        setErrorPassword(true);\n        return;\n      } else {\n        setErrorPassword(false);\n\n        if (!validateEmail(email)) {\n          setEmailRegex(true);\n          return;\n        } else {\n          setEmailRegex(false);\n\n          const Signin = () => {\n            fetch(\"http://localhost:3500/api/auth/login\", {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              credentials: \"same-origin\",\n              body: JSON.stringify({\n                email: email,\n                password: password\n              })\n            }).then(res => {\n              console.log(\"res-->\", res.clone().json());\n              return res.clone().json();\n            }).then(data => {\n              console.log(\"data-->\", data);\n\n              if (data.message === \"Login successful\") {\n                localStorage.removeItem(\"id_temp\");\n                localStorage.setItem(\"id_user\", data.user.userId);\n                localStorage.setItem(\"name_user\", data.user.userName);\n                localStorage.setItem(\"role\", data.user.role);\n                const action = addSession(localStorage.getItem(\"id_user\"));\n                dispatch(action);\n                setCheckPush(true); // Hàm này dùng để tạo các conversation cho user và admin\n\n                const postConversation = async () => {\n                  console.log(\"email-->\", email);\n                  const params = {\n                    email: email //   password: password,\n\n                  };\n                  const query = \"?\" + queryString.stringify(params);\n                  const response = await MessengerAPI.postConversation(query);\n                  console.log(\"response-->\", response);\n                };\n\n                postConversation();\n              } else if (data.message === \"Wrong email\") {\n                setErrorEmail(true);\n                return;\n              } else if (data.message === \"Wrong password\") {\n                setErrorEmail(false);\n                setErrorPassword(true);\n                return;\n              }\n            }).catch(e => {\n              console.log(e);\n            });\n          };\n\n          Signin(); //     localStorage.setItem(\"id_user\", findUser._id);\n          //     localStorage.setItem(\"name_user\", findUser.fullname);\n          //     const action = addSession(localStorage.getItem(\"id_user\"));\n          //     dispatch(action);\n          //     setCheckPush(true);\n          // const findUser = user.find((value) => {\n          //   console.log(\"value-->\", value);\n          //   return value.email === email;\n          // });\n          // console.log(\"finduser-->\", findUser);\n          // if (!findUser) {\n          //   setErrorEmail(true);\n          //   return;\n          // } else {\n          //   setErrorEmail(false);\n          //   if (findUser.password !== password) {\n          //     setErrorPassword(true);\n          //     return;\n          //   } else {\n          //     setErrorPassword(false);\n          //     localStorage.setItem(\"id_user\", findUser._id);\n          //     localStorage.setItem(\"name_user\", findUser.fullname);\n          //     const action = addSession(localStorage.getItem(\"id_user\"));\n          //     dispatch(action);\n          //     setCheckPush(true);\n          //   }\n          // }\n        }\n      }\n    }\n  }; //Hàm này dùng để đưa hết tất cả carts vào API của user\n\n\n  useEffect(() => {\n    const fetchData = async () => {\n      //Lần đầu sẽ không thực hiện insert được vì addCart = ''\n      if (checkPush === true) {\n        for (let i = 0; i < listCart.length; i++) {\n          //Nó sẽ lấy idUser và idProduct và count cần thêm để gửi lên server\n          const params = {\n            idUser: localStorage.getItem(\"id_user\"),\n            idProduct: listCart[i].idProduct,\n            count: listCart[i].count\n          };\n          const query = \"?\" + queryString.stringify(params);\n          const response = await CartAPI.postAddToCart(query);\n          console.log(response);\n        }\n\n        setRedirect(true);\n      }\n    }; // const getSessionLogin = async () => {\n    //   const res = await axios.get(\"http://localhost:3500/api/auth/login\");\n    //   console.log(\"res-->\", res);\n    // };\n    // getSessionLogin();\n\n\n    axios.get(\"http://localhost:3500/api/auth/login\").then(resuilt => {\n      console.log(\"resuilt-->\", resuilt);\n    }).catch(err => {\n      console.log(err);\n    });\n    fetchData();\n  }, [checkPush, listCart]);\n\n  function validateEmail(email) {\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"limiter\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-login100\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrap-login100 p-l-55 p-r-55 p-t-65 p-b-50\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"login100-form-title p-b-33\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-center pb-5\",\n          children: [emailRegex && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-danger\",\n            children: \"* Incorrect Email Format\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 15\n          }, this), errorEmail && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-danger\",\n            children: \"* Please Check Your Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 15\n          }, this), errorPassword && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-danger\",\n            children: \"* Please Check Your Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wrap-input100 validate-input\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input100\",\n            type: \"text\",\n            placeholder: \"Email\",\n            value: email,\n            onChange: onChangeEmail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wrap-input100 rs1 validate-input\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input100\",\n            type: \"password\",\n            placeholder: \"Password\",\n            value: password,\n            onChange: onChangePassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container-login100-form-btn m-t-20\",\n          children: [redirect && /*#__PURE__*/_jsxDEV(Redirect, {\n            to: `/`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 26\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"login100-form-btn\",\n            onClick: onSubmit,\n            children: \"Sign in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center p-t-45 p-b-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"txt1\",\n            children: \"Create an account?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 13\n          }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/signup\",\n            className: \"txt2 hov1\",\n            children: \"Sign up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 235,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SignIn, \"hDqJCkuTM5ZtnE5OFVUdAITVr8w=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = SignIn;\nexport default SignIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["/Users/tan/Desktop/FUNiX/Môn 5/Assignment/ASM3/ASM3 Front-end/src/Authentication/SignIn.jsx"],"names":["React","useEffect","useState","useDispatch","useSelector","Link","Redirect","addSession","queryString","CartAPI","axios","MessengerAPI","SignIn","props","listCart","state","Cart","email","setEmail","password","setPassword","user","setUser","errorEmail","setErrorEmail","emailRegex","setEmailRegex","errorPassword","setErrorPassword","redirect","setRedirect","checkPush","setCheckPush","dispatch","onChangeEmail","e","target","value","onChangePassword","onSubmit","validateEmail","Signin","fetch","method","headers","credentials","body","JSON","stringify","then","res","console","log","clone","json","data","message","localStorage","removeItem","setItem","userId","userName","role","action","getItem","postConversation","params","query","response","catch","fetchData","i","length","idUser","idProduct","count","postAddToCart","get","resuilt","err","re","test","String","toLowerCase"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, Redirect } from \"react-router-dom\";\n// import UserAPI from '../API/UserAPI';\nimport { addSession } from \"../Redux/Action/ActionSession\";\nimport \"./Auth.css\";\nimport queryString from \"query-string\";\nimport CartAPI from \"../API/CartAPI\";\nimport axios from \"axios\";\nimport MessengerAPI from \"../API/MessengerAPI\";\n\nfunction SignIn(props) {\n  //listCart được lấy từ redux\n  const listCart = useSelector((state) => state.Cart.listCart);\n\n  const [email, setEmail] = useState(\"\");\n\n  const [password, setPassword] = useState(\"\");\n\n  const [user, setUser] = useState([]);\n\n  const [errorEmail, setErrorEmail] = useState(false);\n  const [emailRegex, setEmailRegex] = useState(false);\n  const [errorPassword, setErrorPassword] = useState(false);\n\n  const [redirect, setRedirect] = useState(false);\n\n  const [checkPush, setCheckPush] = useState(false);\n\n  const dispatch = useDispatch();\n\n  // useEffect(() => {\n  //   axios\n  //     .get(\"http://localhost:3500/api/auth/login\")\n  //     .then((resuilt) => {\n  //       if (resuilt) {\n  //         console.log(\"resuilt-->\", resuilt);\n  //       }\n  //     })\n  //     .catch((err) => {\n  //       console.log(err);\n  //     });\n  // }, []);\n  // axios.defaults.withCredentials = true;\n\n  const onChangeEmail = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const onChangePassword = (e) => {\n    setPassword(e.target.value);\n  };\n\n  const onSubmit = () => {\n    // const Signin = () => {\n    //   fetch(\"http://localhost:3500/api/auth/login\", {\n    //     method: \"POST\",\n    //     headers: { \"Content-Type\": \"application/json\" },\n    //     credentials: \"same-origin\",\n    //     body: JSON.stringify({\n    //       email: email,\n    //       password: password,\n    //     }),\n    //   })\n    //     .then((res) => {\n    //       return res.json();\n    //     })\n    //     .then((data) => {\n    //       console.log(\"data-->\", data);\n    //     })\n    //     .catch((e) => {\n    //       console.log(e);\n    //     });\n    // };\n    // Signin();\n    if (!email) {\n      setErrorEmail(true);\n      return;\n    } else {\n      if (!password) {\n        setErrorEmail(false);\n        setErrorPassword(true);\n        return;\n      } else {\n        setErrorPassword(false);\n\n        if (!validateEmail(email)) {\n          setEmailRegex(true);\n          return;\n        } else {\n          setEmailRegex(false);\n          const Signin = () => {\n            fetch(\"http://localhost:3500/api/auth/login\", {\n              method: \"POST\",\n              headers: { \"Content-Type\": \"application/json\" },\n              credentials: \"same-origin\",\n              body: JSON.stringify({\n                email: email,\n                password: password,\n              }),\n            })\n              .then((res) => {\n                console.log(\"res-->\", res.clone().json());\n                return res.clone().json();\n              })\n              .then((data) => {\n                console.log(\"data-->\", data);\n                if (data.message === \"Login successful\") {\n                  localStorage.removeItem(\"id_temp\");\n                  localStorage.setItem(\"id_user\", data.user.userId);\n                  localStorage.setItem(\"name_user\", data.user.userName);\n                  localStorage.setItem(\"role\", data.user.role);\n                  const action = addSession(localStorage.getItem(\"id_user\"));\n                  dispatch(action);\n                  setCheckPush(true);\n\n                  // Hàm này dùng để tạo các conversation cho user và admin\n                  const postConversation = async () => {\n                    console.log(\"email-->\", email);\n                    const params = {\n                      email: email,\n                      //   password: password,\n                    };\n\n                    const query = \"?\" + queryString.stringify(params);\n\n                    const response = await MessengerAPI.postConversation(query);\n                    console.log(\"response-->\", response);\n                  };\n\n                  postConversation();\n                } else if (data.message === \"Wrong email\") {\n                  setErrorEmail(true);\n                  return;\n                } else if (data.message === \"Wrong password\") {\n                  setErrorEmail(false);\n                  setErrorPassword(true);\n                  return;\n                }\n              })\n              .catch((e) => {\n                console.log(e);\n              });\n          };\n          Signin();\n\n          //     localStorage.setItem(\"id_user\", findUser._id);\n\n          //     localStorage.setItem(\"name_user\", findUser.fullname);\n\n          //     const action = addSession(localStorage.getItem(\"id_user\"));\n          //     dispatch(action);\n\n          //     setCheckPush(true);\n          // const findUser = user.find((value) => {\n          //   console.log(\"value-->\", value);\n          //   return value.email === email;\n          // });\n\n          // console.log(\"finduser-->\", findUser);\n\n          // if (!findUser) {\n          //   setErrorEmail(true);\n          //   return;\n          // } else {\n          //   setErrorEmail(false);\n\n          //   if (findUser.password !== password) {\n          //     setErrorPassword(true);\n          //     return;\n          //   } else {\n          //     setErrorPassword(false);\n\n          //     localStorage.setItem(\"id_user\", findUser._id);\n\n          //     localStorage.setItem(\"name_user\", findUser.fullname);\n\n          //     const action = addSession(localStorage.getItem(\"id_user\"));\n          //     dispatch(action);\n\n          //     setCheckPush(true);\n          //   }\n          // }\n        }\n      }\n    }\n  };\n\n  //Hàm này dùng để đưa hết tất cả carts vào API của user\n  useEffect(() => {\n    const fetchData = async () => {\n      //Lần đầu sẽ không thực hiện insert được vì addCart = ''\n      if (checkPush === true) {\n        for (let i = 0; i < listCart.length; i++) {\n          //Nó sẽ lấy idUser và idProduct và count cần thêm để gửi lên server\n          const params = {\n            idUser: localStorage.getItem(\"id_user\"),\n            idProduct: listCart[i].idProduct,\n            count: listCart[i].count,\n          };\n\n          const query = \"?\" + queryString.stringify(params);\n\n          const response = await CartAPI.postAddToCart(query);\n          console.log(response);\n        }\n\n        setRedirect(true);\n      }\n    };\n\n    // const getSessionLogin = async () => {\n    //   const res = await axios.get(\"http://localhost:3500/api/auth/login\");\n    //   console.log(\"res-->\", res);\n    // };\n    // getSessionLogin();\n    axios\n      .get(\"http://localhost:3500/api/auth/login\")\n      .then((resuilt) => {\n        console.log(\"resuilt-->\", resuilt);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    fetchData();\n  }, [checkPush, listCart]);\n\n  function validateEmail(email) {\n    const re =\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  }\n\n  return (\n    <div className=\"limiter\">\n      <div className=\"container-login100\">\n        <div className=\"wrap-login100 p-l-55 p-r-55 p-t-65 p-b-50\">\n          <span className=\"login100-form-title p-b-33\">Sign In</span>\n\n          <div className=\"d-flex justify-content-center pb-5\">\n            {emailRegex && (\n              <span className=\"text-danger\">* Incorrect Email Format</span>\n            )}\n            {errorEmail && (\n              <span className=\"text-danger\">* Please Check Your Email</span>\n            )}\n            {errorPassword && (\n              <span className=\"text-danger\">* Please Check Your Password</span>\n            )}\n          </div>\n\n          <div className=\"wrap-input100 validate-input\">\n            <input\n              className=\"input100\"\n              type=\"text\"\n              placeholder=\"Email\"\n              value={email}\n              onChange={onChangeEmail}\n            />\n          </div>\n\n          <div className=\"wrap-input100 rs1 validate-input\">\n            <input\n              className=\"input100\"\n              type=\"password\"\n              placeholder=\"Password\"\n              value={password}\n              onChange={onChangePassword}\n            />\n          </div>\n\n          <div className=\"container-login100-form-btn m-t-20\">\n            {redirect && <Redirect to={`/`} />}\n            <button className=\"login100-form-btn\" onClick={onSubmit}>\n              Sign in\n            </button>\n          </div>\n\n          <div className=\"text-center p-t-45 p-b-4\">\n            <span className=\"txt1\">Create an account?</span>\n            &nbsp;\n            <Link to=\"/signup\" className=\"txt2 hov1\">\n              Sign up\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default SignIn;\n"]},"metadata":{},"sourceType":"module"}